name: CI Comment Triggered Integration Test with Publishing

on:
  issue_comment:
    types: [ created ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'SHA of the commit you want to run integration on (defaults to which branch u call it from)'
        required: false
        default: ''
        type: string

permissions:
  contents: read

jobs:
  work_dispatch:
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo A comment on PR ${{ toJSON(github.event) }}
          echo ${{ github.event.issue.user.login}}
        env:
          PR_NUM: ${{ github.event.issue.number }}


  PR_comment:
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo A comment on PR ${{ toJSON(github.event) }}
          echo ${{ github.event.issue.user.login}}
        env:
          PR_NUM: ${{ github.event.issue.number }}

  PRC_w_check_name:
    if: ${{ github.event.issue.pull_request && (github.event.issue.user.login == 'hypotrochoid' || github.event.issue.user.login == 'winston-bosan') }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo A comment on PR $NUMBER w check for name
          echo ${{ github.event.issue.user.login }}
        env:
          NUMBER: ${{ github.event.issue.number }}

  PRc_check_name_and_content:
    if: ${{ github.event.issue.pull_request && (github.event.issue.user.login == 'hypotrochoid' || github.event.issue.user.login == 'winston-bosan') && contains(github.event.comment.body, 'integrationNOW') }}
    runs-on: ubuntu-latest
    outputs:
      pr_num: ${{ github.event.issue.number }}
    steps:
      - run: |
          echo A comment on PR $NUMBER w check for name and content
          echo "I am PR#:${{ github.event.issue.number }}"
          echo "running on branch ${GITHUB_REF##*/}"
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
          echo "$GIT_BRANCH"
        env:
          NUMBER: ${{ github.event.issue.number }}
          GIT_BRANCH: ${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}

  extract_sha_pr_name_to_output:
    needs: [PRc_check_name_and_content]
    runs-on: ubuntu-latest
    outputs:
      branchName: ${{ steps.api.outputs.branchName }}
      headSHA: ${{ steps.api.outputs.headSHA }}
    steps:
      - id: api
        run: |
          tempHeadRefName=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/winston-bosan/isolation/pulls/${{ needs.PRc_check_name_and_content.outputs.pr_num }}" | jq .head.ref )
          
          tempHeadRefSHA=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/winston-bosan/isolation/pulls/${{ needs.PRc_check_name_and_content.outputs.pr_num }}" | jq .head.sha )
          
          echo $tempHeadRefName
          echo $tempHeadRefSHA
          
          echo "branchName=$tempHeadRefName" >> "$GITHUB_OUTPUT"
          echo "headSHA=$tempHeadRefSHA" >> "$GITHUB_OUTPUT"

  printOut:
    runs-on: ubuntu-latest
    needs: extract_sha_pr_name_to_output
    steps:
      - env:
          OUTPUT1: ${{needs.extract_sha_pr_name_to_output.outputs.branchName}}
          OUTPUT2: ${{needs.extract_sha_pr_name_to_output.outputs.headSHA}}
        run: echo "$OUTPUT1 $OUTPUT2"